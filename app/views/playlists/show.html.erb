<div class="edit-playlist">
    <div class="new-playlist-form">
        <div class="new-playlist-form-content">
            <div class="x">
            <i class="fa-solid fa-x x-icon fa-config" class="x"></i>      
            </div>
            <div class="new-playlist-form-content-form">
            <%= form_with(model: @playlist, local: false) do |f| %>
                <ul>
                    <li><%= f.label :プレイリスト名 %></li>
                    <li><%= f.text_field :name, class: "form-name", value: @playlist.name%></li>
                    <li><%= f.label :説明・コメント %></li>
                    <li><%= f.text_area :comment, class: "new-playlist-comment", value: @playlist.comment  %></li>
                    <%= f.label :public, :公開する do %>
                        <li>
                            <%= f.check_box :public %>
                            <span>公開する</span>
                        </li>
                    <% end %>
                <li><%= f.submit "更新", class: "new-playlist-submit-btn" %></li>
                </ul>
            <% end %>
            </div>
        </div>
    </div>
</div>

<div class="playlist-info">
    <h1 id="playlist-name"><%= @playlist.name %></h1>
    <% if @playlist.public == 1 %>
        <span class="plivate-public">公開</span>
    <% else %>
        <span class="plivate-public">非公開</span>
    <% end %>
    <h3><%= link_to(@playlist.user.name, "/users/#{@playlist.user.id}") %></h3>
    <div class="playlist-comment">
        <p id="playlist-comment-content"><%= @playlist.comment %> </p>
    </div>
    <% if current_user == @playlist.user%>
        <div class="playlist-edit-delete">
            <%= link_to("削除", "/playlists/#{@playlist.id}", method: :delete, data: { confirm: "本当に消しますか" }) %>
            <span id="edit-playlist">編集</span>
        </div>
    <% end %>
</div>

<div class="music-list">
    <% number = 0 %>
    <% @relations.each do |relation| %>
        <div class="music-in-the-playlist relation-<%=relation.id%>" id="<%=number%>" draggable="true">
            <div class="play-button">
                <button class="track-number-play">
                    <p class="track-number" id="tr<%=number%>"><%=number+1%></p>
                    <div class="playbutton">
                        <i class="fa-duotone fa-play fa playlistplaybutton"></i>
                    </div>
                </button>
            </div>
            <div class="liked-music-jaket"><%= link_to(image_tag("#{relation.music.album.img_path}",class: "jaket-mini", width: "50px"), "/albums/#{relation.music.album.id}") %></div>
            <div class="liked-music-name"><%= link_to(relation.music.name, "/musics/#{relation.music.id}") %></div>
            <div class="liked-music-album"><%= link_to(relation.music.album.name, "/albums/#{relation.music.album.id}") %></div>
            <div class="liked-music-artist"><%= link_to(relation.music.artist, "/musics/#{relation.music.id}") %></div>
            <div class="album-music-like like-form-<%=relation.music.id%>">
                <% if @like = Like.find_by(user_id: current_user.id, music_id: relation.music.id) %>
                    <%= render "shared/unlike", like: @like , like_index: false %>
                <% else %>
                    <%= render "shared/like", unliked_music: relation.music, like_index: false %>
                <% end %>
            </div>
            <div class="add-playlist">
                <div class="add_playlist-point"><p>…</p></div>
                <div class="select-playlists">
                    <div class="select-playlists-close">
                        <p>x</p>
                    </div>
                    <ul>
                        <% @playlists.each do |playlist| %>
                            <li class="playlist-name">
                                <%= form_with(model: MusicPlaylistRelation.new, local: false) do |f| %>
                                    <%= hidden_field_tag :music_id, relation.music.id %>
                                    <%= hidden_field_tag :playlist_id, playlist.id %>
                                    <%= hidden_field_tag :at_playlist_show, true %>
                                    <%= button_tag type: :submit, class: "like-btn" do %>
                                        <%=playlist.name%>
                                    <% end %>
                                <% end %>
                            </li>
                        <% end %>
                    </ul>  
                </div>
            </div>
            
            <div class="music-delete-from-playlist" >
                <% if @playlist.user == current_user %>
                    <%= form_with(model: relation, local: false, method: "delete") do |f| %>
                        <%= hidden_field_tag :music_id, relation.music.id %>
                        <%= hidden_field_tag :playlist_id, relation.playlist.id %>
                        <%= hidden_field_tag :relation_id, relation.id %>
                        <%= button_tag type: :submit, class: "like-btn delete-btn" do %>
                            <p>削除</p>
                        <% end %>
                    <% end %>
                <% end %>
            </div>
        </div>
        <%number += 1%>
    <% end %>
</div>

<script>
    document.querySelectorAll(".music-in-the-playlist").forEach(elm => {
        elm.ondragstart = function () {
            event.dataTransfer.setData('text/plain', event.target.id);
        };
        elm.ondragover = function() {
            event.preventDefault();
            let rect = this.getBoundingClientRect();
            if ((event.clientY - rect.top) < (this.clientHeight / 2)) {
                //マウスカーソルの位置が要素の半分より上
                this.style.borderTop = '2px solid black';
                this.style.borderBottom = '';
            } else {
                //マウスカーソルの位置が要素の半分より下
                this.style.borderTop = '';
                this.style.borderBottom = '2px solid black';
            }
        };
        elm.ondragleave = function () {
            this.style.borderTop = '';
            this.style.borderBottom = '';
        };
        elm.ondrop = async function(){
            event.preventDefault();
            let dragged_id = Number(event.dataTransfer.getData('text/plain'));
            let elm_drag = document.getElementById(dragged_id);
            let dropped_id = Number(this.getAttribute("id"));
            let elm_drop = document.getElementById(dropped_id);

            let rect = this.getBoundingClientRect();
            // 上から下
            if(dragged_id<dropped_id){
                //マウスカーソルの位置が要素の半分より上のとき
                if ((event.clientY - rect.top) < (this.clientHeight / 2)) {
                    for(let i=dragged_id+1; i<dropped_id; i++){
                        document.getElementById(i).querySelector("p").innerText = i;
                        document.getElementById(i).setAttribute("id", `${i-1}`);
                    }
                    this.parentNode.insertBefore(elm_drag, this);
                    elm_drag.querySelector("p").innerHTML = dropped_id
                    elm_drag.setAttribute("id", dropped_id - 1);
                    info = infos[dragged_id]
                    infos.splice(dragged_id, 1)
                    infos.splice(dropped_id - 1, 0, info)
                    if (!(dragged_id - dropped_id == 1)){
                        await fetch(`/playlists/<%=@playlist.id%>/sort?drag=${dragged_id}&drop=${dropped_id - 1}`, {method: 'POST'})
                    }
                //マウスカーソルの位置が要素の半分より下
                } else {
                    for(let i=dragged_id+1; i<=dropped_id; i++){
                        document.getElementById(i).querySelector("p").innerText = i;
                        document.getElementById(i).setAttribute("id", `${i-1}`);
                    }
                    this.parentNode.insertBefore(elm_drag, this.nextSibling);
                    elm_drag.setAttribute("id", dropped_id);
                    elm_drag.querySelector("p").innerHTML = dropped_id + 1;
                    info = infos[dragged_id]
                    infos.splice(dragged_id, 1)
                    infos.splice(dropped_id, 0, info)
                    await fetch(`/playlists/<%=@playlist.id%>/sort?drag=${dragged_id}&drop=${dropped_id}`, {method: 'POST'})
                }
            // 下から上
            }else if(dragged_id>dropped_id){
                //マウスカーソルの位置が要素の半分より上
                if ((event.clientY - rect.top) < (this.clientHeight / 2)) {
                    for(let i=dragged_id-1; dropped_id<=i; i--){
                        document.getElementById(i).querySelector("p").innerText = i + 2;
                        document.getElementById(i).setAttribute("id", i + 1);
                    }
                    this.parentNode.insertBefore(elm_drag, this);
                    elm_drag.setAttribute("id", dropped_id);
                    elm_drag.querySelector("p").innerHTML = dropped_id + 1;
                    info = infos[dragged_id]
                    infos.splice(dragged_id, 1)
                    infos.splice(dropped_id, 0, info)
                    await fetch(`/playlists/<%=@playlist.id%>/sort?drag=${dragged_id}&drop=${dropped_id}`, {method: 'POST'})
                //マウスカーソルの位置が要素の半分より下
                } else {
                    for(let i=dragged_id-1; dropped_id<i; i--){
                        document.getElementById(i).querySelector("p").innerText = i + 2;
                        document.getElementById(i).setAttribute("id", i + 1);
                    }
                    this.parentNode.insertBefore(elm_drag, this.nextSibling);
                    elm_drag.setAttribute("id", dropped_id + 1);
                    elm_drag.querySelector("p").innerHTML = dropped_id + 2;
                    info = infos[dragged_id]
                    infos.splice(dragged_id, 1)
                    infos.splice(dropped_id + 1, 0, info)
                    await fetch(`/playlists/<%=@playlist.id%>/sort?drag=${dragged_id}&drop=${dropped_id + 1}`, {method: 'POST'})
                }
            }
            this.style.borderTop = '';
            this.style.borderBottom = '';
        };
    });
</script>